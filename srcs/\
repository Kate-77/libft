/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_itoa.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: kmoutaou <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/11/14 14:48:39 by kmoutaou          #+#    #+#             */
/*   Updated: 2021/11/14 21:11:16 by kmoutaou         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../libft.h"

int ft_size(int n)
{
    int size;

    size = 1;
    while (n > 9)
    {
        n = n / 10;
        size++;
	}
    return (size);
}

char    *ft_convert(char *str, int n, int index)
{
    
	while (n)
    {
        str[index] = (n % 10) + '0';
    	printf(" n[%d] -> %c \n", index, str[index]);
		n = n / 10;
        index--;
    }
    return (str);
}

char    *ft_itoa(int n)
{
    char    *result;
    int     sign;
    int     size;

    if (n == -2147483648)
	{
		result = ft_strdup("-2147483648");
		return (result);
	}
	sign = 0;
    if (n < 0)
	{
        n = n * -1;
        sign = 1;
	}
    size = ft_size(n) + sign;
	printf("size -> %d\n", size);
    result = (char *)malloc(sizeof(char) * (size + 1));
    if (!result)
        return (result);
    if (n < 0)
    {
        result[0] = '-';
    }
    if (n == 0)
        result[0] = '0';
	result = ft_convert(result, n, size);
	result[size + 1] = '\0';
	return (result);
}
#include <stdio.h>
int	main()
{
	int	n;
	char	*str;

	n = -2147;
	str = ft_itoa(n);
	printf("%s", str);
}
